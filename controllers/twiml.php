<?phpclass Twiml extends Controller{        private $ivr_message;    function __construct() {        $this->ivr_message=(object) parse_ini_file('application/ivr_message.ini');    }    function index(){                $data['ivr_welcome']=  $this->ivr_message->welcome;        //detect behavior        //bahave1 => fixed, with order ID        //bahave2 => fixed, no order ID        //bahave3 => userdefined, with order ID        //bahave4 => userdefined, no order ID        $this->loadModel('system_model');        $system_model=new System_model();        $bahavoir=$system_model->get_bahavior();        if($bahavoir['type']=='fixed' && $bahavoir['order_id']=='enabled'){                    $data['behavior']='behave1';                }                if($bahavoir['type']=='fixed' && $bahavoir['order_id']=='disabled'){                    $data['behavior']='behave2';                }                if($bahavoir['type']=='user_defined' && $bahavoir['order_id']=='enabled'){                    $data['behavior']='behave3';                }                if($bahavoir['type']=='user_defined' && $bahavoir['order_id']=='disabled'){                    $data['behavior']='behave4';                }                $data['redirect']=  Config::$base_url."/".$data['behavior'].".php";                        $this->loadView('twiml/twiml_welcome',$data);            }    function confirm_payment(){         $params=$this->urlPara();         $this->loadModel('transactions');         $txns=new Transactions();         $order=$txns->get_order_data($params[0]);         $data["amount"] = $order['amount'];         $data['gather']=$_REQUEST['Digits'];         $data['redirect']=  Config::$base_url."/paynow/".$params[0].".php";         $data['ivr_payment_cancelled'] = $this->ivr_message->payment_cancelled;         // $data['ivr_ask_card']=  $this->ivr_message->ask_card;         $this->loadView('twiml/twiml_confirm_payment', $data);    }        function get_cardnumber(){        $params=$this->urlPara();        $gather=$_REQUEST['Digits'];        if(!empty($params[1])){            $pressed=$_REQUEST['Digits'];            if($pressed==1){                $data['redirect']=Config::$base_url."/twiml/get_validty/".$params[0]."/".$params[1].".php";                $data['ivr_ask_validity']=  $this->ivr_message->ask_validity;                $this->loadView('twiml/twiml_getvalidity', $data);            }  else {                $go=Config::$base_url."/twiml/confirm_payment/".$params[0].".php?Digits=1";                header('location:'.$go);            }        }  else {            $data['confirm']=implode(' ',str_split($gather));            $crdnum_url=  $this->cript_str('5',$gather);            $data['redirect']=  Config::$base_url."/twiml/get_cardnumber/".$params[0]."/".$crdnum_url.".php";                        $data['ivr_say_card']=  $this->ivr_message->say_card;             $data['ivr_card_confirm']= $this->ivr_message->card_confirm;            $this->loadView('twiml/twiml_confirm_card', $data);        }    }            function get_validty(){        $params=$this->urlPara();        $gather=$_REQUEST['Digits'];        if(!empty($params[2])){            $pressed=$_REQUEST['Digits'];            $gather= $this->decript_str($params[2]);            $gather= str_split($gather, 2);            $yd=$gather[1].$gather[0];            if(date('ym')>$yd){                //$pressed==2;            }            if($pressed==1){                $data["redirect"] = Config::$base_url."/twiml/get_zipcode/".$params[0]."/".$params[1]."/".$params[2].".php";                $data['ivr_ask_zipcode']=  $this->ivr_message->ask_zipcode;                $this->loadView('twiml/twiml_getzipcode', $data);                // $data['redirect']=Config::$base_url."/paynow/".$params[0]."/".$params[1]."/".$params[2].".php";                // $data['ivr_payment_started']=  $this->ivr_message->payment_started;                // $this->loadView('twiml/twiml_payment_started', $data);            }  else {                $data['redirect']=Config::$base_url."/twiml/get_validty/".$params[0]."/".$params[1].".php";                $this->loadView('twiml/twiml_getvalidity', $data);            }                    }  else {        $data['confirm']=implode(' ',str_split($gather));        $validity_url=  $this->cript_str('8',$gather);        $data['redirect']=  Config::$base_url."/twiml/get_validty/".$params[0]."/".$params[1]."/".$validity_url.".php";        $data['ivr_say_validity']=  $this->ivr_message->say_validity;        $data['iv_validity_confirm'] = $this->ivr_message->validity_confirm;        $this->loadView('twiml/twiml_confirm_validity', $data);        }    }    function get_zipcode(){        $params=$this->urlPara();        $gather=$_REQUEST['Digits'];        if(!empty($params[3])){            $pressed=$_REQUEST['Digits'];            $gather= $this->decript_str($params[2]);            $gather= str_split($gather, 2);            $yd=$gather[1].$gather[0];            if($pressed==1){                $data['redirect']=Config::$base_url."/paynow/".$params[0]."/".$params[1]."/".$params[2]."/".$params[3].".php";                $data['ivr_payment_started']=  $this->ivr_message->payment_started;                $this->loadView('twiml/twiml_payment_started', $data);            }  else {                $data['redirect']=Config::$base_url."/twiml/get_zipcode/".$params[0]."/".$params[1]."/".$params[2].".php";                $this->loadView('twiml/twiml_getzipcode', $data);            }                    }  else {        $data['confirm']=implode(' ',str_split($gather));        $zip_url=  $this->cript_str('6',$gather);        $data['redirect']=  Config::$base_url."/twiml/get_zipcode/".$params[0]."/".$params[1]."/".$params[2]."/".$zip_url.".php";        $data['ivr_say_zipcode']=  $this->ivr_message->say_zipcode;        $data['iv_zipcode_confirm'] = $this->ivr_message->zipcode_confirm;        $this->loadView('twiml/twiml_confirm_zipcode', $data);        }    }    	function pay_confirmation(){		 $data['ivr_already_paid']=  $this->ivr_message->already_paid;		 $this->loadView('twiml/twiml_already_paid', $data);	}            function cript_str($num,$str){        $str = implode($num,str_split($str));        $str= strrev($str);        return $str;            }        function  decript_str($str){        $str= strrev($str);        $str=str_split($str);        $string='';        foreach ($str as $key=>$value) {            if ($key % 2 == 0) {                $string.=$value;              }        }        return $string;    }    //end of class                }